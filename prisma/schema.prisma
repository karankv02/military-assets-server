generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

enum Role {
  ADMIN
  BASE_COMMANDER
  LOGISTICS_OFFICER
}

model User {
  id       Int    @id @default(autoincrement())
  username String @unique
  password String
  role     Role   @default(LOGISTICS_OFFICER)

  baseId Int?
  base   Base? @relation(fields: [baseId], references: [id])

  createdAt DateTime @default(now())

  logs ApiLog[]
}

model Base {
  id       Int    @id @default(autoincrement())
  name     String
  location String

  users         User[]
  assets        Asset[]
  assignments   Assignment[]
  purchases     Purchase[]
  expenditures  Expenditure[]

  transfersFrom Transfer[] @relation("FromBase")
  transfersTo   Transfer[] @relation("ToBase")
}

model Asset {
  id           Int      @id @default(autoincrement())
  name         String
  type         String
  quantity     Int
  purchaseDate DateTime

  baseId Int
  base   Base @relation(fields: [baseId], references: [id])

  assignments  Assignment[]
  transfers    Transfer[]   @relation("AssetTransfers")
  purchases    Purchase[]
  expenditures Expenditure[]
}

model Transfer {
  id        Int      @id @default(autoincrement())
  assetId   Int
  asset     Asset    @relation("AssetTransfers", fields: [assetId], references: [id])

  fromBaseId Int
  fromBase   Base     @relation("FromBase", fields: [fromBaseId], references: [id])

  toBaseId   Int
  toBase     Base     @relation("ToBase", fields: [toBaseId], references: [id])

  quantity   Int
  createdAt  DateTime @default(now())
}

model Assignment {
  id        Int      @id @default(autoincrement())
  assetId   Int
  asset     Asset    @relation(fields: [assetId], references: [id])

  baseId    Int
  base      Base     @relation(fields: [baseId], references: [id])

  assignee  String
  quantity  Int
  createdAt DateTime @default(now())
}

model Purchase {
  id          Int      @id @default(autoincrement())
  assetId     Int
  asset       Asset    @relation(fields: [assetId], references: [id])

  baseId      Int
  base        Base     @relation(fields: [baseId], references: [id])

  quantity    Int
  cost        Float
  supplier    String
  purchasedAt DateTime @default(now())
}

model Expenditure {
  id         Int      @id @default(autoincrement())
  assetId    Int
  asset      Asset    @relation(fields: [assetId], references: [id])

  baseId     Int
  base       Base     @relation(fields: [baseId], references: [id])

  quantity   Int
  reason     String?
  recordedAt DateTime @default(now())
}

model ApiLog {
  id        Int      @id @default(autoincrement())
  userId    Int
  user      User     @relation(fields: [userId], references: [id])

  action    String
  endpoint  String
  timestamp DateTime @default(now())
  details   String?
}
